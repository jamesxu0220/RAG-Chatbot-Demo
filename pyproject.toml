[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "sandbox"
description = "AI sandbox for jamesxu0220"
authors = [
    { name = "James Xu", email = "zx2370@columbia.edu" },
]
requires-python = ">=3.12,<3.13"

[tool]

[tool.black]
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | \__pycache__
  | \.pytest_cache
)/
'''
line-length = 88
target-version = ['py312']

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "def main",
    "__version__",
    "from",
    "import",
]
include_namespace_packages = true
omit = [
    "*/test*.py",
    "*/*_test.py",
    "*/conftest.py",
    "*/__init__.py",
]
show_missing = true
skip_covered = false

[tool.coverage.run]
branch = true
omit = [
    "*/test*.py",
    "*/*_test.py",
    "*/conftest.py",
    "*/__init__.py",
]
relative_files = true
source = []

[tool.isort]
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = []
line_length = 88
lines_between_sections = 1
multi_line_output = 3
profile = "black"
skip = []
skip_gitignore = true
src_paths = []
use_parentheses = true

[tool.mypy]
explicit_package_bases = true
no_implicit_optional = true

[tool.poetry]
package-mode = false
version = "0.1.0"
packages = []
requires-poetry = ">=2.1.1,<2.1.2"

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
flask = "^3.1.0"

